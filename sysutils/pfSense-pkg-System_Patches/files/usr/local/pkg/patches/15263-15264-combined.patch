diff --git a/src/etc/inc/config.lib.inc b/src/etc/inc/config.lib.inc
index 4e0126762d..e74f711d31 100644
--- a/src/etc/inc/config.lib.inc
+++ b/src/etc/inc/config.lib.inc
@@ -1146,18 +1146,30 @@ function pfSense_clear_globals() {
 	$error = error_get_last();
 
 	// Errors generated by user code (diag_commands.php) are identified by path and not added to notices
-	if ($error !== NULL && !preg_match('|^' . preg_quote(g_get('tmp_path_user_code')) . '/[^/]{1,16}$|', $error['file'])) {
+	$is_user_code = preg_match('|^' . preg_quote(g_get('tmp_path_user_code')) . '/[^/]{1,16}$|', $error['file']);
+
+	if (!is_null($error)) {
 		if (in_array($error['type'], array(E_ERROR, E_COMPILE_ERROR, E_CORE_ERROR, E_RECOVERABLE_ERROR))) {
-			$errorstr = "PHP ERROR: Type: {$error['type']}, File: {$error['file']}, Line: {$error['line']}, Message: {$error['message']}";
-			print($errorstr);
-			log_error($errorstr);
-			file_notice("phperror", $errorstr, 'PHP errors');
-		} else if ($error['type'] != E_NOTICE) {
-			$errorstr = "PHP WARNING: Type: {$error['type']}, File: {$error['file']}, Line: {$error['line']}, Message: {$error['message']}";
-			// XXX: comment out for now, should re-enable post-2.2
-			//print($errorstr);
-			//log_error($errorstr);
-			//file_notice("phpwarning", $errorstr, 'PHP warning');
+			$errortype = "error";
+		} elseif ($error['type'] != E_NOTICE) {
+			$errortype = "warning";
+		}
+		$errorstr = "PHP " . strtoupper($errortype) . ": " .
+				"Type: {$error['type']}, " .
+				"File: {$error['file']}, " .
+				"Line: {$error['line']}, " .
+				"Message: {$error['message']}";
+
+		if (!$is_user_code) {
+			if (($errortype == "error") ||
+			    (config_path_enabled('system','developerspew') &&
+			    ($errortype = "warning"))) {
+				print('<pre style="white-space: pre-wrap;">' . htmlentities($errorstr) . '</pre>');
+				log_error($errorstr);
+				file_notice("php{$errortype}", $errorstr, 'PHP {$errortype}s');
+			}
+		} else {
+			print(str_replace(',', "\n", $errorstr));
 		}
 	}
 
diff --git a/src/etc/rc.php_ini_setup b/src/etc/rc.php_ini_setup
index eefffb882b..2c07db9870 100755
--- a/src/etc/rc.php_ini_setup
+++ b/src/etc/rc.php_ini_setup
@@ -164,9 +164,13 @@ if [ -z "${TIMEZONE}" ]; then
 fi
 
 if echo "${VERSION}" | grep -q RELEASE; then
+	# On release versions, reduce error reporting and don't print function arguments.
 	error_reporting="error_reporting = E_ERROR | E_PARSE"
+	exception_ignore_args="zend.exception_ignore_args=1"
 else
+	# On development versions, increase error reporting and print function arguments.
 	error_reporting="error_reporting = E_ALL ^ (E_WARNING | E_NOTICE | E_DEPRECATED)"
+	exception_ignore_args="zend.exception_ignore_args=0"
 fi
 
 # Get a loaded module list in the stock php
@@ -195,7 +199,8 @@ zlib.output_compression = Off
 zlib.output_compression_level = 1
 include_path = ".:/etc/inc:/usr/local/pfSense/include:/usr/local/pfSense/include/www:/usr/local/www:/usr/local/captiveportal:/usr/local/pkg:/usr/local/www/classes:/usr/local/www/classes/Form:/usr/local/share/pear:/usr/local/share/openssl_x509_crl/"
 display_startup_errors=off
-display_errors=on
+; No need to display errors directly, they are handled in etc/inc/config.lib.inc by pfSense_clear_globals()
+display_errors=off
 log_errors=on
 error_log=/tmp/PHP_errors.log
 extension_dir=${EXTENSIONSDIR}
@@ -203,6 +208,7 @@ date.timezone="${TIMEZONE}"
 session.hash_bits_per_character = 5
 session.hash_function = 1
 ${error_reporting}
+${exception_ignore_args}
 
 ; Extensions
 
diff --git a/src/usr/local/www/crash_reporter.php b/src/usr/local/www/crash_reporter.php
index 1e424e5d36..faba948e51 100644
--- a/src/usr/local/www/crash_reporter.php
+++ b/src/usr/local/www/crash_reporter.php
@@ -77,7 +77,7 @@ if ($_POST['Submit'] == "No") {
 		if (filesize("/tmp/PHP_errors.log") < FILE_SIZE) {
 			$php_errors = file_get_contents("/tmp/PHP_errors.log");
 			$crash_reports .= "\nPHP Errors:\n";
-			$crash_reports .= $php_errors . "\n\n";
+			$crash_reports .= htmlspecialchars($php_errors) . "\n\n";
 		} else {
 			$crash_reports .= "\n/tmp/PHP_errors.log file is too large to display.\n";
 		}
diff --git a/src/usr/local/www/diag_command.php b/src/usr/local/www/diag_command.php
index 00ffb7a2c0..11cb59a7e6 100755
--- a/src/usr/local/www/diag_command.php
+++ b/src/usr/local/www/diag_command.php
@@ -266,22 +266,17 @@ END_FILE;
 
 		$output = $matches = array();
 		$retval = 0;
-		exec("/usr/local/bin/php -d log_errors=off {$tmpfile}", $output, $retval);
+		exec("/usr/local/bin/php -d zend.exception_ignore_args=0 -d log_errors=off {$tmpfile}", $output, $retval);
 
 		puts('<div class="panel panel-success responsive"><div class="panel-heading"><h2 class="panel-title">PHP Response</h2></div>');
 
 		// Help user to find bad code line, if it gave an error
-		$errmsg_found = preg_match("`error.*:.* (?:in|File:) {$tmpfile}(?:\(| on line |, Line: )(\d+)(?:, Message:|\).* eval\(\)'d code|$)`i", implode("\n", $output), $matches);
+		$errmsg_found = preg_match("`(error|warning).*:.* (?:in|File:) {$tmpfile}(?:\(| on line |, Line: )(\d+)(?:, Message:|\).* eval\(\)'d code|$)`i", implode(",", $output), $matches);
 		if ($retval || $errmsg_found) {
-			/* Trap failed code - test both retval and output message
-			 * Typical messages as at 2.3.x:
-			 *   "Parse error: syntax error, ERR_DETAILS in FILE on line NN"
-			 *   "PHP ERROR: Type: NN, File: FILE, Line: NN, Message: ERR_DETAILS"
-			 *   "Parse error: syntax error, unexpected end of file in FILE(NN) : eval()'d code on line 1" [the number in (..) is the error line]
-			*/
-			if ($matches[1] > $lineno_correction) {
-				$errline = $matches[1] - $lineno_correction;
-				$errtext = sprintf(gettext('Line %s appears to have generated an error, and has been highlighted. The full response is below.'), $errline);
+			/* Trap failed code - test both retval and output message */
+			if ($matches[2] > $lineno_correction) {
+				$errline = (int)$matches[2] - $lineno_correction;
+				$errtext = sprintf(gettext('Line %s appears to have generated an error or warning and has been highlighted. The full response is below.'), $errline);
 			} else {
 				$errline = -1;
 				$errtext = gettext('The code appears to have generated an error, but the line responsible cannot be identified. The full response is below.');
@@ -289,13 +284,15 @@ END_FILE;
 			$errtext .= '<br/>' . sprintf(gettext('Note that the line number in the full PHP response will be %s lines too large. Nested code and eval() errors may incorrectly point to "line 1".'), $lineno_correction);
 			$syntax_output = array();
 			$html = "";
-			exec("/usr/local/bin/php -s -d log_errors=off {$tmpfile}", $syntax_output);
-			// Lines 0, 2 and 3 are CSS wrapper for the syntax highlighted code which is at line 1 <br> separated.
-			$syntax_output = explode("<br />", $syntax_output[1]);
+			exec("/usr/local/bin/php -s -d zend.exception_ignore_args=0 -d log_errors=off {$tmpfile}", $syntax_output);
+
+			/* Remove lines with automatically added code */
+			$syntax_output = array_slice($syntax_output, $lineno_correction, (count($syntax_output) - ($lineno_correction + 1)));
+
 			$margin_layout = '%3s %' . strlen(count($syntax_output)) . 'd:';
-			for ($lineno = 1; $lineno < count($syntax_output) - $lineno_correction; $lineno++) {
+			for ($lineno = 1; $lineno < (count($syntax_output) + 1); $lineno++) {
 				$margin = str_replace(' ', '&nbsp;', sprintf($margin_layout, ($lineno == $errline ? '&gt;&gt;&gt;' : ''), $lineno));
-				$html .= "<span style='color:black;backgroundcolor:lightgrey'><tt>{$margin}</tt></span>&nbsp;&nbsp;{$syntax_output[$lineno + $lineno_correction - 1]}<br/>\n";
+				$html .= "<span style='color:black;backgroundcolor:lightgrey'><tt>{$margin}</tt></span>&nbsp;&nbsp;{$syntax_output[$lineno - 1]}<br/>\n";
 			}
 			print_info_box($errtext, 'danger');
 			print "<div style='margin:20px'><b>" . gettext("Error locator:") . "</b>\n";
